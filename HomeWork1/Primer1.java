package HomeWork1;

public class Primer1 {

    public static void main(String[] args) {

        System.out.println("Найти значение выражения: 5 + 2 /8");
        int b = 5 + 2 / 8;
        System.out.println(b);  //Ответ 5. Сначала выполняем деление, в результате 2/8 = 0 (т.к. int не поддерживает дроби), затем сложение

        System.out.println("Найти значение выражения: (5 + 2) /8");
        int c = (5 + 2) / 8;
        System.out.println(c);  // ответ 0. Сначала выполняем действие в скобках, затем деление : 7/8 = 0

        System.out.println("Найти значение выражения: (5 + 2++) /8");
        int i = 2;
        int d = (5 + i++) / 8; // ответ 0. Сначала выполняем дейсвие в скобках (увеличение i на единицу происходит уже после этого)
                               // т.о. значение в скобках равно 7, и при делении на 8 получаем ноль
        System.out.println(d);

        System.out.println("Найти значение выражения: (5 + 2++) /--8");
        int a = 8;
        int i1 = 2;
        int e = (5 + i1++) / --a;
        System.out.println(e);  //ответ 1. Как и в прошлом примере, значение в скобках равно 7.
                                // Значение числа а сначала уменьшается на 1, и затем производим деление на него. 7 / 7 = 1

        System.out.println("Найти значение выражения: (5 * 2 >> 2++) /--8");
        int a2 = 8;
        int i2 = 2;
        int k = (5 * 2 >> i2++) / --a2; // Ответ 0. Сначала делаем то, что в скобках : 5*2=10 (в двоичной системе 00001010) при сдвиге на 2 символа
                                      // вправо даст 00000010, что является числом 2. Число а уменьшается на 1, затем делим на него : 2/7=0
        System.out.println(k);

        System.out.println("Найти значение выражения: (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8)");
        int a3 = 8;
        int i3 = 2;
        int l = (5 + 7 > 20 ? 68 : 22 * 2 >> i3++) / --a3;
        System.out.println(l);

// Ответ 1. Сначала проверяем условие в скобках 5 + 7 > 20, оно не верно, значит будет выполняться выражение (22*2 >>2)/7.
// Число 44 это 00101100 при переходе на 2 вправо дает 00001011, что равно числу 11. Число а уменьшается на 1, затем производим деление
// 11/7=1 (остаток отбрасываем)

        System.out.println("Найти значение выражения: (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8");
        int a4 = 8;
        int i4 = 2;
                                //>=68
        int m = (5 + 7 > 20 ? 68       : 22 * 2 >> i4++) / --a4;
        System.out.println(m);
// Ошибка компиляции. После проверки выражения 5 + 7 > 20 должны производиться математические действия с левым или правым операндом.
// При этом выражение 68>=68 является логическим, а не математическим

        System.out.println("Найти значение выражения: 6 - 2 > 3 && 12 * 12 <= 119");

        boolean n = 6 - 2 > 3 && 12 * 12 <= 119;
        System.out.println(n);

// Ответ false. Левая часть выражения дает true, правая часть дает false. true && false = false так как условие не может выполняться одновременно

        System.out.println("Найти значение выражения: true && false");
        boolean f = true && false;
        System.out.println(f);

// Ответ false, так как условие не может выполняться одновременно
    }
}








